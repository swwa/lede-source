--- a/drivers/power/reset/qnap-poweroff.c
+++ b/drivers/power/reset/qnap-poweroff.c
@@ -23,6 +23,9 @@
 #include <linux/io.h>
 #include <linux/clk.h>
 
+#include <asm/system_misc.h>
+
+
 #define UART1_REG(x)	(base + ((UART_##x) << 2))
 
 struct power_off_cfg {
@@ -74,6 +77,26 @@ static void qnap_power_off(void)
 	writel(cfg->cmd, UART1_REG(TX));
 }
 
+static void synology_restart(enum reboot_mode reboot_mode, const char *cmd)
+{
+        const unsigned divisor = ((tclk + (8 * cfg->baud)) / (16 * cfg->baud));
+
+        pr_err("%s: triggering restart...\n", __func__);
+
+        /* hijack UART1 and reset into sane state */
+        writel(0x83, UART1_REG(LCR));
+        writel(divisor & 0xff, UART1_REG(DLL));
+        writel((divisor >> 8) & 0xff, UART1_REG(DLM));
+        writel(0x03, UART1_REG(LCR));
+        writel(0x00, UART1_REG(IER));
+        writel(0x00, UART1_REG(FCR));
+        writel(0x00, UART1_REG(MCR));
+
+        /* send the restart command to PIC */
+        writel('C', UART1_REG(TX));
+}
+
+
 static int qnap_power_off_probe(struct platform_device *pdev)
 {
 	struct device_node *np = pdev->dev.of_node;
@@ -115,6 +138,8 @@ static int qnap_power_off_probe(struct p
 		 >return -EBUSY;
 	}
 	pm_power_off = qnap_power_off;
+	if (cfg->baud == 9600)
+		arm_pm_restart = synology_restart;
 
 	return 0;
 }
--- a/arch/arm/boot/dts/kirkwood-synology.dtsi
+++ b/arch/arm/boot/dts/kirkwood-synology.dtsi
@@ -246,7 +246,7 @@
 
 			rs5c372: rs5c372@32 {
 				status = "disabled";
-				compatible = "ricoh,rs5c372";
+				compatible = "ricoh,rs5c372a";
 				reg = <0x32>;
 			};
 
